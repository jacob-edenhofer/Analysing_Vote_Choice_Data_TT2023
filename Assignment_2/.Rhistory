#              "PPI | RC" = "PPI vs RC",
#              "RC | UD" = "RC vs UD",
#              "extreme_dummy_individuals" = "Extreme voter dummy"),
title = "Multinomial models for predicting vote choice") %>%
kable_styling(latex_options = "hold_position") %>%
add_footnote(label = "Model four includes the following covariates: gender, education, religiosity and unemployment importance.", notation = "none")
knitr::opts_chunk$set(echo = TRUE)
# packages
library(tidyverse)
library(here)
library(modelsummary)
library(janitor)
library(scales)
library(haven)
library(ggpubr)
library(coefplot)
library(MASS)
library(knitr)
library(kableExtra)
library(ggeffects)
library(margins)
# data
deV07 <- read_dta(paste0(here(), "/Data/ITANES1994_2001.dta"))
deV07 %>%
dplyr::select(-c(year, prtystd)) %>%
datasummary_skim(histogram = F,
title = "Summary statistics") %>%
kable_styling(latex_options = "hold_position")
deV07_mod <- deV07 %>%
mutate(gndr_dummy = ifelse(gndr == 1, 1, 0), # 1 for male, 0 for female
extreme_dummy_individuals = ifelse(place_self %in% c(1, 5), 1, 0), # extreme dummy for individuals
extreme_dummy_parties = ifelse(place_votedprty %in% c(1, 5), 1, 0)) %>% # extreme dummy for parties
group_by(year) %>% # group by year to account for longitudinal nature of data
mutate(unemp_salience_per_year = sum(unemp_issue == 1, na.rm = T)/n(),
n = n()) %>%
ungroup()
deV07_mod %>%
group_by(year) %>%
summarise(mean_lr = mean(place_self, na.rm = T),
median_lr = median(place_self, na.rm = T)) %>%
pivot_longer(cols = !year, names_to = "measure", values_to = "values") %>%
ggplot(aes(x = year, y = values, colour = measure)) +
geom_point(size = 2) +
geom_line(linewidth = 1) +
expand_limits(y = c(1, 5)) +
scale_colour_manual("",
labels = c("mean_lr" = "Mean",
"median_lr" = "Median"),
values = c("#1C9E77", "#023047")) +
scale_x_continuous("Year survey was taken",
breaks = seq(1994, 2001, 1)) +
labs(y = "Self right-left placement",
title = "Mean and median of self right-left placement over time") +
theme_bw() +
theme(legend.position = "bottom")
deV07_mod %>%
group_by(year) %>%
summarise(round(mean_cl_normal(place_self), digits = 2)) %>%
kbl(booktabs = T,
col.names = c("Year", "Mean", "Lower bound of 95% CI",
"Upper bound of 95% CI"),
caption = "Mean of ideological shift") %>%
kable_styling(latex_options = "hold_position")
deV07_mod <- deV07_mod %>%
mutate(squared_distance = (place_self-place_votedprty)^2)
extreme_party1 <- glm(extreme_dummy_parties ~ squared_distance,
family = binomial(link = "logit"),
data = deV07_mod)
extreme_party2 <- glm(extreme_dummy_parties ~ squared_distance + gndr_dummy,
family = binomial(link = "logit"),
data = deV07_mod)
extreme_party3 <- glm(extreme_dummy_parties ~ squared_distance + gndr_dummy + edu,
family = binomial(link = "logit"),
data = deV07_mod)
extreme_party4 <- glm(extreme_dummy_parties ~ squared_distance + gndr_dummy + edu + relig,
family = binomial(link = "logit"),
data = deV07_mod)
extreme_party5 <- glm(extreme_dummy_parties ~ squared_distance + gndr_dummy + edu + relig + unemp_salience_per_year,
family = binomial(link = "logit"),
data = deV07_mod)
extreme_party6 <- glm(extreme_dummy_parties ~ squared_distance + gndr_dummy + edu + relig + unemp_salience_per_year + debate,
family = binomial(link = "logit"),
data = deV07_mod)
# modelsummary
modelsummary(list(extreme_party1, extreme_party2, extreme_party3, extreme_party4, extreme_party5, extreme_party6),
estimate = "{estimate}{stars}",
coef_map = c("squared_distance" = "Perceived squared distance",
"gndr_dummy" = "Gender dummy",
"edu" = "Education",
"relig" = "Religiosity",
"unemp_salience_per_year" = "Salience of unemployment",
"debate" = "Political interest"),
title = "Correlates of extreme voting") %>%
kable_styling(latex_options = "hold_position")
modelplot(list(extreme_party1, extreme_party2, extreme_party3, extreme_party4, extreme_party5, extreme_party6),
coef_map = c("squared_distance" = "Perceived squared distance",
"gndr_dummy" = "Gender dummy",
"edu" = "Education",
"relig" = "Religiosity",
"debate" = "Political interest",
"unemp_salience_per_year" = "Salience of unemployment")) +
expand_limits(x = 1) +
geom_vline(xintercept = 0, linetype = "dashed") +
labs(title = "Coefficient plot of the six models") +
theme(legend.position = "bottom")
# create dummy variable
deV07_mod <- deV07_mod %>%
mutate(interest_dummy = ifelse(debate %in% c(1, 2), 1, 0),
interest_factor = factor(debate),
# factorise to increase interpretability
gndr_dummy_f = factor(gndr_dummy,
levels = c("0", "1"),
labels = c("Female", "Male")),
unemp_issue_f = factor(unemp_issue,
levels = c("0", "1"),
labels = c("No", "Yes")))
# estimate logit model
interest1 <- polr(interest_factor ~ gndr_dummy_f,
data = deV07_mod,
Hess = T)
interest2 <- polr(interest_factor ~ gndr_dummy_f*unemp_issue_f,
data = deV07_mod,
Hess = T)
interest3 <- polr(interest_factor ~ gndr_dummy_f*unemp_issue_f + edu + relig,
data = deV07_mod,
Hess = T)
# modelsummary
modelsummary(list(interest1, interest2, interest3),
estimate = "{estimate}{stars}",
coef_map = c("1|2" = "1 vs 2",
"2|3" = "2 vs 3",
"gndr_dummy_fMale" = "Gender",
"unemp_issue_fYes" = "Unemployment most important issue",
"gndr_dummy_fMale:unemp_issue_fYes" = "Gender x Unemployment most important issue",
"edu" = "Education",
"relig" = "Religiosity"),
title = "Association between interest in politics and gender") %>%
kable_styling(latex_options = "hold_position")
pp_plot <- plot(ggpredict(interest3, terms = c("unemp_issue_f", "gndr_dummy_f")),
connect.lines = T) +
scale_colour_manual("Gender",
labels = c("0" = "Female",
"1" = "Male"),
values = c(c("#1C9E77", "#023047"))) +
expand_limits(y = 0.6) +
labs(y = "Predicted probability of watching debates",
x = "Unemployment most important issue?",
title = "Predicted probabilities\nof being interested in politics",
caption = "Covariates include: education and religiosity.") +
theme(legend.position = "bottom") +
theme(plot.title = element_text(size = 10),
plot.caption = element_text(hjust = 0, size = 6))
# compute marginal effect
interest4 <- MASS::polr(interest_factor ~ gndr_dummy*unemp_issue_f + edu + relig,
data = deV07_mod,
Hess = T)
# predicted probabilities
marginaleffects::plot_slopes(interest4, variables = "gndr_dummy", by = "unemp_issue_f")
# predicted probabilities
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f")
# predicted probabilities
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, group = factor(gndr_dummy))) +
geom_point(aes(y = Estimate)) +
geom_errorbar(aes(ymin = Estimate - Std.Error, ymax = Estimate - Std.Error)) +
facet_wrap(~Group)
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f")
# predicted probabilities
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f)) +
geom_point(aes(y = Estimate)) +
geom_errorbar(aes(ymin = Estimate - Std.Error, ymax = Estimate - Std.Error)) +
facet_wrap(~Group)
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f)) +
geom_point(aes(y = Estimate)) +
geom_errorbar(aes(ymin = Estimate - Std.Error, ymax = Estimate - Std.Error))
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f")
# predicted probabilities
dd <- marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f")
View(dd)
# predicted probabilities
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, group = factor(gndr_dummy))) +
geom_point(aes(y = estimate)) +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate - std.error)) +
facet_wrap(~group)
View(dd)
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, group = factor(term))) +
geom_point(aes(y = estimate)) +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate - std.error)) +
facet_wrap(~group)
# predicted probabilities
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, y = estimate,
group = factor(term))) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate - std.error)) +
facet_wrap(~group)
# predicted probabilities
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, y = estimate,
group = factor(term))) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) +
facet_wrap(~group)
pp_plot <- plot(ggpredict(interest3, terms = c("unemp_issue_f", "gndr_dummy_f")),
connect.lines = T) +
scale_colour_manual("Gender",
labels = c("0" = "Female",
"1" = "Male"),
values = c(c("#1C9E77", "#023047"))) +
expand_limits(y = 0.6) +
labs(y = "Predicted probability of watching debates",
x = "Unemployment most important issue?",
title = "Predicted probabilities\nof being interested in politics",
caption = "Covariates include: education and religiosity.") +
theme(legend.position = "bottom") +
theme(plot.title = element_text(size = 10),
plot.caption = element_text(hjust = 0, size = 6))
pp_plot
# predicted probabilities
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, y = estimate,
group = factor(term))) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) +
facet_wrap(~group)
# predicted probabilities
marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, y = estimate,
group = factor(term))) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error),
width = 0.12) +
geom_hline(yintercept = 0, linetype = "dashed") +
expand_limits(y = 0.12) +
facet_wrap(~group) +
labs(y = "Marginal effect",
x = "Unemployment most important issue?",
title = "Marginal effect of gender on\npolitical interest by unemployment salience",
caption = "Covariates include: education and religiosity.") +
theme_bw() +
theme(plot.title = element_text(size = 10),
plot.caption = element_text(hjust = 0, size = 6))
# compute marginal effect
interest4 <- MASS::polr(interest_factor ~ gndr_dummy*unemp_issue_f + edu + relig,
data = deV07_mod,
Hess = T)
# marginal effect
me <- marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, y = estimate,
group = factor(term))) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error),
width = 0.12) +
geom_hline(yintercept = 0, linetype = "dashed") +
expand_limits(y = 0.12) +
facet_wrap(~group) +
labs(y = "Marginal effect of gender",
x = "Unemployment most important issue?",
title = "Marginal effect of gender on\npolitical interest by unemployment salience",
caption = "Covariates include: education and religiosity.") +
theme_bw() +
theme(plot.title = element_text(size = 10),
plot.caption = element_text(hjust = 0, size = 6))
ggarrange(pp_plot, me_plot, nrow = 1)
# compute marginal effect
interest4 <- MASS::polr(interest_factor ~ gndr_dummy*unemp_issue_f + edu + relig,
data = deV07_mod,
Hess = T)
# marginal effect
me_plot <- marginaleffects::slopes(interest4,
variables = "gndr_dummy", by = "unemp_issue_f") %>%
ggplot(aes(x = unemp_issue_f, y = estimate,
group = factor(term))) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error),
width = 0.12) +
geom_hline(yintercept = 0, linetype = "dashed") +
expand_limits(y = 0.12) +
facet_wrap(~group) +
labs(y = "Marginal effect of gender",
x = "Unemployment most important issue?",
title = "Marginal effect of gender on\npolitical interest by unemployment salience",
caption = "Covariates include: education and religiosity.") +
theme_bw() +
theme(plot.title = element_text(size = 10),
plot.caption = element_text(hjust = 0, size = 6))
ggarrange(pp_plot, me_plot, nrow = 1)
# factorise DV
deV07_mod <- deV07_mod %>%
mutate(prtystd_name_f = relevel(factor(prtystd_name), "Lega"))
# models
multinomial1 <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals,
data = deV07_mod, trace = F)
multinomial2 <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy,
data = deV07_mod, trace = F)
multinomial3 <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy + edu,
data = deV07_mod, trace = F)
multinomial4 <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy + edu + relig + unemp_issue,
data = deV07_mod, trace = F)
# modelsummary
modelsummary(list(multinomial1, multinomial2, multinomial3, multinomial4),
estimate = "{estimate}{stars}",
# coef_map = c("AN|FI" = "AN vs FI",
#              "FI|Lega" = "FI vs Lega",
#              "Lega | PDS" = "Lega vs PDS",
#              "PDS | PPI" = "PDS vs PPI",
#              "PPI | RC" = "PPI vs RC",
#              "RC | UD" = "RC vs UD",
#              "extreme_dummy_individuals" = "Extreme voter dummy"),
title = "Multinomial models for predicting vote choice") %>%
kable_styling(latex_options = "hold_position") %>%
add_footnote(label = "Model four includes the following covariates: gender, education, religiosity and unemployment importance.", notation = "none")
# model
multinomial4 <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy + edu + relig + unemp_issue,
data = deV07_mod, trace = F)
modelsummary(list(multinomial4),
estimate = "{estimate}{stars}",
# coef_map = c("AN|FI" = "AN vs FI",
#              "FI|Lega" = "FI vs Lega",
#              "Lega | PDS" = "Lega vs PDS",
#              "PDS | PPI" = "PDS vs PPI",
#              "PPI | RC" = "PPI vs RC",
#              "RC | UD" = "RC vs UD",
#              "extreme_dummy_individuals" = "Extreme voter dummy"),
title = "Multinomial models for predicting vote choice",
output = "markdown")
# model
multinomial4 <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy + edu + relig + unemp_issue,
data = deV07_mod, trace = F)
multinomial4
# factorise DV
deV07_mod <- deV07_mod %>%
mutate(prtystd_name_f = relevel(factor(prtystd_name), "Lega"))
# model
multinomial4 <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy + edu + relig + unemp_issue,
data = deV07_mod, trace = F)
# modelsummary
modelsummary(list(multinomial4),
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial models for predicting vote choice") %>%
kable_styling(latex_options = "hold_position") %>%
add_footnote(label = "Model four includes the following covariates: gender, education, religiosity and unemployment importance.", notation = "none")
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial models for predicting vote choice",
output = "data.frame")
# model
multinomial <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy + edu + relig + unemp_issue,
data = deV07_mod, trace = F)
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial models for predicting vote choice",
output = "data.frame")
multinomial
summary(multinomial)
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial models for predicting vote choice",
output = "data.frame")
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial models for predicting vote choice",
output = "data.frame") %>%
filter(grepl("extreme_dummy_individuals", term))
summary(multinomial)
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial model for predicting vote choice",
output = "data.frame") %>%
filter(grepl("extreme_dummy_individuals", term))
# factorise DV
deV07_mod <- deV07_mod %>%
mutate(prtystd_name_f = relevel(factor(prtystd_name), "Lega"))
# model
multinomial <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy + edu + relig + unemp_issue,
data = deV07_mod, trace = F)
summary(multinomial)
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial model for predicting vote choice",
output = "data.frame") %>%
filter(grepl("extreme_dummy_individuals", term)) %>%
kbl(booktabs = T) %>%
kable_styling(latex_options = "hold_position") %>%
add_footnote(label = "Model four includes the following covariates: gender, education, religiosity and unemployment importance.", notation = "none")
summary(nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals,
data = deV07_mod, trace = F))
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial model for predicting vote choice",
output = "data.frame")
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial model for predicting vote choice",
output = "data.frame") %>%
filter(grepl("extreme_dummy_individuals|(Intercept)", term),
grepl("estimate", statistic))
kbl(booktabs = T) %>%
kable_styling(latex_options = "hold_position") %>%
add_footnote(label = "Model four includes the following covariates: gender, education, religiosity and unemployment importance.", notation = "none")
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial model for predicting vote choice",
output = "data.frame") %>%
filter(grepl("extreme_dummy_individuals|(Intercept)", term),
grepl("estimate", statistic)) %>%
select(-1)
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
# coef_map = c("extreme_dummy_individuals" = "Extreme voter dummy",
#              "gndr_dummy" = "Gender",
#              "edu" = "Education",
#              "unemp_issue" = "Unemployment most important issue"),
title = "Multinomial model for predicting vote choice",
output = "data.frame") %>%
filter(grepl("extreme_dummy_individuals|(Intercept)", term),
grepl("estimate", statistic)) %>%
dplyr::select(-1)
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
title = "Multinomial model for predicting vote choice",
output = "data.frame") %>%
filter(grepl("extreme_dummy_individuals|(Intercept)", term),
grepl("estimate", statistic)) %>%
dplyr::select(-1) %>%
kbl(booktabs = T) %>%
kable_styling(latex_options = "hold_position") %>%
add_footnote(label = "The model includes the following covariates: gender, education, religiosity and unemployment importance.", notation = "none")
# factorise DV
deV07_mod <- deV07_mod %>%
mutate(prtystd_name_f = relevel(factor(prtystd_name), "Lega"))
# model
multinomial <- nnet::multinom(prtystd_name_f ~ extreme_dummy_individuals + gndr_dummy + edu + relig + unemp_issue,
data = deV07_mod, trace = F)
# modelsummary
modelsummary(multinomial,
estimate = "{estimate}{stars}",
title = "Multinomial model for predicting vote choice",
output = "data.frame") %>%
filter(grepl("extreme_dummy_individuals|(Intercept)", term),
grepl("estimate", statistic)) %>%
dplyr::select(-1) %>%
kbl(booktabs = T) %>%
kable_styling(latex_options = "hold_position") %>%
add_footnote(label = "The model includes the following covariates: gender, education, religiosity and unemployment importance.", notation = "none")
