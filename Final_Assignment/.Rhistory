econ_current_eval_general_factor = as.factor(econ_current_eval_general),
econ_current_personal = ifelse(q13 < 0, NA, q13),
econ_current_personal_factor = factor(econ_current_personal),
econ_personal_gov_resp = ifelse(q15 < 0, NA, q15),
gender_too_far = ifelse(q27g < 0, NA, q27g),
gender_too_far_factor = factor(gender_too_far),
job_loss_year_next2yrs = ifelse(d18 < 0, NA, d18),
job_loss_year_next2yrs_factor = factor(job_loss_year_next2yrs),
length_unemp_last10yrs_yrs = ifelse(d17a < 0, NA, d17a),
length_unemp_last10yrs_mon = ifelse(d17b < 0, NA, d17b),
unemp_at_least_one_year = ifelse(length_unemp_last10yrs_yrs >= 1, 1, 0),
unemp_at_least_one_year_factor = factor(unemp_at_least_one_year),
profession_loss_next2yrs = ifelse(d19 < 0, NA, d19),
profession_loss_next2yrs_factor = factor(profession_loss_next2yrs),
profession_current = ifelse(d11 < 0, NA, d11),
type_of_emp_contract = ifelse(d13 < 0, NA, d13),
difference_whos_gov = ifelse(q117 < 0, NA, q117),
difference_whos_gov_factor = factor(difference_whos_gov),
difference_who_votes = ifelse(q118 < 0, NA, q118),
difference_who_votes_factor = factor(difference_who_votes))
gles_mod <- gles_mod %>%
mutate(pol_knowledge = ifelse(q5 < 0, NA, q5))
gles_mod$q5
gles_mod <- gles_mod %>%
mutate(pol_knowledge = ifelse(q5 < 0, NA, q5),
pol_knowledge1 = case_when(pol_knowledge == 1 | pol_knowledge == 3 ~ "Wrong",
pol_knowledge == 2 ~ "Right",
pol_knowledge ~ "NA"))
gles_mod <- gles_mod %>%
mutate(pol_knowledge = ifelse(q5 < 0, NA, q5),
pol_knowledge1 = case_when(pol_knowledge == 1 | pol_knowledge == 3 ~ "Wrong",
pol_knowledge == 2 ~ "Right",
TRUE ~ NA))
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_histogram(aes(y = after_stat(density))) +
geom_density(linewidth = 1) +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar() +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = prop)) +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop))) +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1)) +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1)) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 1)) +
expand_limits( y = 0.7) +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1)) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 1)) +
expand_limits( y = 0.8) +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1)) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1)) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the second vote.\nWhich vote decides how many seats each party will have in parliament?") +
theme_bw()
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1)) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the second vote.\nWhich vote decides how many seats each party will have in parliament?") +
theme_bw() +
theme(axis.text.x = element_text(size = 7))
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1)) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?") +
theme_bw() +
theme(axis.text.x = element_text(size = 7))
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.5) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?") +
theme_bw() +
theme(axis.text.x = element_text(size = 7))
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?") +
theme_bw() +
theme(axis.text.x = element_text(size = 7))
gles_mod <- gles_mod %>%
mutate(pol_knowledge = ifelse(q5 < 0, NA, q5),
pol_knowledge1 = case_when(pol_knowledge == 1 | pol_knowledge == 3 ~ "Wrong",
pol_knowledge == 2 ~ "Right",
TRUE ~ NA))
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?") +
theme_bw() +
theme(axis.text.x = element_text(size = 7))
ggsave("pol_knowledge.png", width = 9, height = 6, units = "in")
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
) +
theme_bw() +
theme(axis.text.x = element_text(size = 14))
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
) +
theme_bw() +
theme(axis.text.x = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12))
ggsave("pol_knowledge.png", width = 9, height = 6, units = "in")
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))
ggsave("pol_knowledge.png", width = 9, height = 6, units = "in")
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggsave("pol_knowledge.png", width = 9, height = 6, units = "in")
gles_mod %>%
filter(q5 %in% c(1, 2, 3)) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggsave("pol_knowledge.png", width = 9, height = 6, units = "in")
gc()
# load relevant packages
library(tidyverse)
library(haven)
library(modelsummary)
library(survey)
library(here)
library(ggeffects)
library(margins)
library(marginaleffects)
library(kableExtra)
library(knitr)
library(gridExtra)
library(patchwork)
# import data
gles <- read_dta(paste0(here(), "/Data/ZA7701_v2-0-0_en.dta"))
gles_mod <- gles %>%
select(1:100, grep("d38|d4|q18|d63|d18|q63|d17|d8|d7|wum6|q13|q14|q15|q16|q18|q23|q24|q25|q26||q27q35|q37|q46|q78|q79|q125|q143", names(gles))) %>%
mutate(btw17_zweitstimme = ifelse(q34ba < 0, NA, q34ba),
btw21_zweitstimme = ifelse(q114ba < 0, NA, q114ba),
btw21_zweitstimme_factor = factor(btw21_zweitstimme,
levels = c("1", "4", "5", "6", "7", "322", "801"),
labels = c("CDU/CSU", "SPD", "FDP", "GRUENE/B90", "LINKE", "AfD", "Other party")),
btw21_turnout = ifelse(q111 < 0 | q111 == 8, NA, q111),
btw21_turnout1 = ifelse(btw21_turnout == 1, 1, 0),
year_born = ifelse(grepl("-99|frueher", d2a), NA, d2a),
ostwest2_dummy = ifelse(ostwest2 < 0, NA, ostwest2),
ostwest_factor = factor(ostwest2_dummy,
levels = c(0, 1),
labels = c("ost", "west")),
sex = ifelse(d1 < 0, NA, d1),
sex1 = factor(sex,
levels = c(1, 2),
labels = c("male", "female")),
year_born1 = as.numeric(as.character(year_born)),
age = 2021 - as.numeric(as.character(year_born)),
spd_21 = ifelse(btw21_zweitstimme == 4, 1, 0),
union_21 = ifelse(btw21_zweitstimme == 1, 1, 0),
gruene_21 = ifelse(btw21_zweitstimme == 6, 1, 0),
fdp_21 = ifelse(btw21_zweitstimme == 5, 1, 0),
afd_21 = ifelse(btw21_zweitstimme == 322, 1, 0),
linke_21 = ifelse(btw21_zweitstimme == 7, 1, 0),
spd_to_switch = ifelse(btw21_zweitstimme == 4 & btw17_zweitstimme != 4, 1, 0),
afd_away_switch = ifelse(btw17_zweitstimme == 322 & btw21_zweitstimme != 322, 1, 0),
constituency_centric_rep = ifelse(q63a < 0, NA, q63a),
party_centric_rep = ifelse(q63c < 0, NA, q63c),
household_income = ifelse(d63 < 0, NA, d63),
household_income_factor = as.factor(household_income),
bachelor_dummy = ifelse(d8j1 < 0, NA, d8j1),
school = ifelse(d7 < 0, NA, d7),
abitur = ifelse(d7 == 5, 1, 0),
abitur_factor = ifelse(abitur == 1, "abitur", "no_abitur"),
urban_rural = ifelse(wum6 < 0, NA, wum6),
urban_rural_factor = as.factor(urban_rural),
subjective_class = ifelse(d38 < 0, NA, d38),
left_right_self = ifelse(q37 < 0, NA, q37),
left_right_self_factor = as.factor(left_right_self),
left_right_cdu = ifelse(q35b < 0, NA, q35b),
left_right_cdu_factor = as.factor(left_right_cdu),
distance_cdu = (left_right_cdu-left_right_self)^2,
left_right_csu = ifelse(q35c < 0, NA, q35c),
left_right_csu_factor = as.factor(left_right_csu),
distance_csu = (left_right_csu-left_right_self)^2,
left_right_spd = ifelse(q35d < 0, NA, q35d),
left_right_spd_factor = as.factor(left_right_spd),
distance_spd = (left_right_spd-left_right_self)^2,
left_right_afd = ifelse(q35h < 0, NA, q35h),
left_right_afd_factor = as.factor(left_right_afd),
distance_afd = (left_right_afd-left_right_self)^2,
left_right_fdp = ifelse(q35e < 0, NA, q35e),
left_right_fdp_factor = as.factor(left_right_fdp),
distance_fdp = (left_right_fdp-left_right_self)^2,
left_right_green = ifelse(q35f < 0, NA, q35f),
left_right_green_factor = as.factor(left_right_green),
distance_green = (left_right_green-left_right_self)^2,
left_right_linke = ifelse(q35g < 0, NA, q35g),
left_right_linke_factor = as.factor(left_right_linke),
distance_linke = (left_right_linke-left_right_self)^2,
scholz_love = ifelse(q18b < 0, NA, q18b),
scholz_love_factor = as.factor(scholz_love),
finzanz_abgehangt_subjektiv = ifelse(q46a < 0, NA, q46a),
finzanz_abgehangt_subjektiv_factor = as.factor(finzanz_abgehangt_subjektiv),
arbeit_abgehant_subjektiv = ifelse(q46b < 0, NA, q46b),
arbeit_abgehant_subjektiv_factor = as.factor(arbeit_abgehant_subjektiv),
cancel_culture_subjektiv = ifelse(q46d < 0, NA, q46d),
cancel_culture_subjektiv_factor = as.factor(cancel_culture_subjektiv),
infrastruktur_subjektiv = ifelse(q46c < 0, NA, q46c),
infrastruktur_subjektiv_factor = as.factor(infrastruktur_subjektiv),
trust_in_politicians = ifelse(q79d < 0, NA, q79d),
trust_in_politicians_factor = as.factor(trust_in_politicians),
trust_in_parliament = ifelse(q79b < 0, NA, q79b),
trust_in_parliament_factor = as.factor(trust_in_parliament),
trust_in_parties = ifelse(q79c < 0, NA, q79c),
trust_in_parties_factor = as.factor(trust_in_parties),
trust_in_public_broadcast = ifelse(q79i < 0, NA, q79i),
trust_in_public_broadcast_factor = as.factor(trust_in_public_broadcast),
trust_general = ifelse(q78 < 0, NA, q78),
trust_general_factor = as.factor(trust_general),
out_group_minorities_assim = ifelse(q125a < 0, NA, q125a),
out_group_minorities_assim_factor = as.factor(out_group_minorities_assim),
out_group_majority_will = ifelse(q125b < 0, NA, q125b),
out_group_majority_will_factor = as.factor(out_group_majority_will),
out_group_immig_econ_good = ifelse(q125c < 0, NA, q125c),
out_group_immig_econ_good_factor = as.factor(out_group_immig_econ_good),
out_group_immig_culture_threat = ifelse(q125d < 0, NA, q125d),
out_group_immig_culture_threat_factor = as.factor(out_group_immig_culture_threat),
out_group_immig_crime = ifelse(q125e < 0, NA, q125e),
out_group_immig_crime_factor = as.factor(out_group_immig_crime),
scale_pol_lasceht = ifelse(q18a < 0, NA, q18a),
scale_pol_scholz = ifelse(q18b < 0, NA, q18b),
scale_pol_baerbock = ifelse(q18c < 0, NA, q18c),
econ_current_eval_general = ifelse(q23 < 0, NA, q23),
econ_current_eval_general_factor = as.factor(econ_current_eval_general),
econ_current_personal = ifelse(q13 < 0, NA, q13),
econ_current_personal_factor = factor(econ_current_personal),
econ_personal_gov_resp = ifelse(q15 < 0, NA, q15),
gender_too_far = ifelse(q27g < 0, NA, q27g),
gender_too_far_factor = factor(gender_too_far),
job_loss_year_next2yrs = ifelse(d18 < 0, NA, d18),
job_loss_year_next2yrs_factor = factor(job_loss_year_next2yrs),
length_unemp_last10yrs_yrs = ifelse(d17a < 0, NA, d17a),
length_unemp_last10yrs_mon = ifelse(d17b < 0, NA, d17b),
unemp_at_least_one_year = ifelse(length_unemp_last10yrs_yrs >= 1, 1, 0),
unemp_at_least_one_year_factor = factor(unemp_at_least_one_year),
profession_loss_next2yrs = ifelse(d19 < 0, NA, d19),
profession_loss_next2yrs_factor = factor(profession_loss_next2yrs),
profession_current = ifelse(d11 < 0, NA, d11),
type_of_emp_contract = ifelse(d13 < 0, NA, d13),
difference_whos_gov = ifelse(q117 < 0, NA, q117),
difference_whos_gov_factor = factor(difference_whos_gov),
difference_who_votes = ifelse(q118 < 0, NA, q118),
difference_who_votes_factor = factor(difference_who_votes))
gles_mod <- gles_mod %>%
mutate(pol_knowledge = ifelse(q5 < 0, NA, q5),
pol_knowledge1 = case_when(pol_knowledge == 1 | pol_knowledge == 3 ~ "Wrong",
pol_knowledge == 2 ~ "Right",
TRUE ~ NA))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", y = 0.8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", x = 1, y = 0.8, label = "jasd") +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", x = 1.5, y = 0.8, label = "jasd") +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", x = 1.5, y = 0.7, label = "Germany") +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", x = 1.5, y = 0.7, label = "Germany", size = 12) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", x = 1.5, y = 0.7, label = "Germany", size = 10) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", x = 1.5, y = 0.7, label = "Germany", size = 8) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", x = 1.5, y = 0.75, label = "Germany", size = 7) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
gles_mod %>%
filter(q5 %in% c(1, 2, 3), btw21_turnout1 == 1) %>%
ggplot(aes(x = pol_knowledge1)) +
geom_bar(aes(y = after_stat(prop), group = 1), width = 0.8) +
annotate(geom = "text", x = 1.5, y = 0.75, label = "Germany", size = 7) +
scale_y_continuous("Share of respondents",
labels = scales::label_percent(scale = 100)) +
expand_limits(y = 0.8) +
labs(x = "In the federal elections you have two votes, the first vote and the\nsecond vote. Which vote decides how many seats each party will have in parliament?",
caption = "Data source: GLES, post-election study, September/October 2022") +
theme_bw() +
theme(axis.text.x = element_text(size = 12),
axis.title.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
axis.title.y = element_text(size = 12))
ggsave("pol_knowledge.png", width = 9, height = 6, units = "in")
