finzanz_abgehangt_subjektiv_factor = as.factor(finzanz_abgehangt_subjektiv),
arbeit_abgehant_subjektiv = ifelse(q46b < 0, NA, q46b),
arbeit_abgehant_subjektiv_factor = as.factor(arbeit_abgehant_subjektiv),
cancel_culture_subjektiv = ifelse(q46d < 0, NA, q46d),
cancel_culture_subjektiv_factor = as.factor(cancel_culture_subjektiv),
infrastruktur_subjektiv = ifelse(q46c < 0, NA, q46c),
infrastruktur_subjektiv_factor = as.factor(infrastruktur_subjektiv),
unemployed_last10_yrs = ifelse(d17a < 0, NA, d17a),
unemployed_last10yrs_months = ifelse(d17b < 0, NA, d17b),
unemployed_last10yrs_weeks = ifelse(d17c < 0, NA, d17c),
unemployed_dummy = ifelse(unemployed_last10_yrs != 0, 1, 0),
unemployed_dummy_factor = as.factor(unemployed_dummy),
trust_in_politicians = ifelse(q79d < 0, NA, q79d),
trust_in_politicians_factor = as.factor(trust_in_politicians),
trust_in_parliament = ifelse(q79b < 0, NA, q79b),
trust_in_parliament_factor = as.factor(trust_in_parliament),
trust_in_parties = ifelse(q79c < 0, NA, q79c),
trust_in_parties_factor = as.factor(trust_in_parties),
trust_in_public_broadcast = ifelse(q79i < 0, NA, q79i),
trust_in_public_broadcast_factor = as.factor(trust_in_public_broadcast),
trust_general = ifelse(q78 < 0, NA, q78),
trust_general_factor = as.factor(trust_general),
out_group_minorities_assim = ifelse(q125a < 0, NA, q125a),
out_group_minorities_assim_factor = as.factor(out_group_minorities_assim),
out_group_majority_will = ifelse(q125b < 0, NA, q125b),
out_group_majority_will_factor = as.factor(out_group_majority_will),
out_group_immig_econ_good = ifelse(q125c < 0, NA, q125c),
out_group_immig_econ_good_factor = as.factor(out_group_immig_econ_good),
out_group_immig_culture_threat = ifelse(q125d < 0, NA, q125d),
out_group_immig_culture_threat_factor = as.factor(out_group_immig_culture_threat),
out_group_immig_crime = ifelse(q125e < 0, NA, q125e),
out_group_immig_crime_factor = as.factor(out_group_immig_crime),
scale_pol_lasceht = ifelse(q18a < 0, NA, q18a),
scale_pol_scholz = ifelse(q18b < 0, NA, q18b),
scale_pol_baerbock = ifelse(q18c < 0, NA, q18c),
econ_current_eval_general = ifelse(q23 < 0, NA, q23),
econ_current_eval_general_factor = as.factor(econ_current_eval_general),
econ_current_personal = ifelse(q13 < 0, NA, q13),
econ_current_personal_factor = factor(econ_current_personal),
econ_personal_gov_resp = ifelse(q15 < 0, NA, q15),
gender_too_far = ifelse(q27g < 0, NA, q27g),
gender_too_far_factor = factor(gender_too_far))
spd_income <- glm(spd_21 ~ household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
# plot
cplot(spd_income, x = "household_income",
xvals = seq(1, 13, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Net Monthly Household Income",
breaks = seq(1, 13, 1),
labels = c("<500€", "[500-750€)",
"[750-1000€)", "[1000-1250€)",
"[1250-1500€)", "[1500-2000€)",
"[2000-2500€)", "[2500-3000€)",
"[3000-4000€)", "[4000-5000€)",
"[5000-7000€)", "[7000-10000€)",
">10000€")) +
labs(y = "Predicted Probability of SPD Voting",
caption = "Covariates include: age, education, gender and rurality of place of residence.") +
theme_bw() +
theme(axis.text.x = element_text(angle = 15, hjust = 1))
spd_sclass <- glm(spd_21 ~ subjective_class + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
# plot
cplot(spd_sclass, x = "subjective_class",
xvals = seq(1, 6, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Subjective Class",
breaks = seq(1, 6, 1),
labels = c("Unterschicht", "Arbeiterschicht",
"Untere Mittelschicht", "mittlere Mittelschicht",
"obere Mittelschicht", "Oberschicht")) +
labs(y = "Predicted Probability of Voting SPD",
caption = "Covariates include: age, education, gender and rurality of place of residence.") +
ylim(c(0.1, 0.5)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 15, hjust = 1))
spd_left_right_self <- glm(spd_21 ~ left_right_self + I(left_right_self^2) + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
# plot
cplot(spd_left_right_self, x = "left_right_self",
xvals = seq(1, 11, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Left-Right Self-Placement",
breaks = seq(1, 11, 1)) +
expand_limits(y = 0.5) +
labs(y = "Predicted Probability of Voting SPD") +
theme_bw()
spd_age <- glm(spd_21 ~ household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
# plot
cplot(spd_age, x = "age", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_line(aes(y = yvals)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
scale_x_continuous("Age", breaks = seq(20, 90, 10)) +
labs(y = "Predicted Probability of Voting SPD") +
theme_bw()
cplot(spd_income, x = "sex1", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
ylim(c(0.2, 0.4)) +
scale_x_discrete("Sex", labels = c("Female", "Male")) +
labs(y = "Predicted Probability of Voting SPD") +
theme_bw()
cplot(spd_income, x = "abitur_factor", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_discrete("Education", labels = c("At Least Abitur", "No Abitur")) +
ylim(c(0.2, 0.4)) +
labs(y = "Predicted Probability of SPD Voting") +
theme_bw()
cplot(spd_income, x = "ostwest_factor", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_discrete("Ost-West Dummy", labels = c("Ost", "West")) +
ylim(c(0.2, 0.4)) +
labs(y = "Predicted Probability of Voting SPD") +
theme_bw()
# none of the other abgehaengt variables is significant
spd_cancel_culture <- glm(spd_21 ~ cancel_culture_subjektiv + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(spd_cancel_culture, x = "cancel_culture_subjektiv",
xvals = seq(1, 5, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Subjektiv: Keine freie Meinungsaeusserung moeglich",
breaks = seq(1, 5, 1),
labels = c("Stimme voll zu", "Stimme eher zu",
"teils/teils", "Stimme eher nicht zu",
"Stimme ueberhaupt nicht zu")) +
labs(y = "Predicted Probability of Voting SPD") +
ylim(c(0.1, 0.4)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 15, hjust = 1))
# general trust is not significant
# trust in parliament is significant
spd_trust_parliament <- glm(spd_21 ~ trust_in_parliament + I(trust_in_parliament^2) + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(spd_trust_parliament, x = "trust_in_parliament",
xvals = seq(1, 11, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Vertrauen: Bundestag",
breaks = seq(1, 11, 1)) +
labs(y = "Predicted Probability of Voting SPD",
caption = "'1' indicates 'no trust', while 11 indicates 'full trust'.") +
ylim(c(0, 0.4)) +
theme_bw()
# trust in parties
spd_trust_parties <- glm(spd_21 ~ trust_in_parties + I(trust_in_parties^2) + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(spd_trust_parties, x = "trust_in_parties",
xvals = seq(1, 11, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Vertrauen: Parteien",
breaks = seq(1, 11, 1)) +
labs(y = "Predicted Probability of Voting SPD",
caption = "'1' indicates 'no trust', while 11 indicates 'full trust'.") +
ylim(c(0, 0.4)) +
theme_bw()
# trust in politicians
spd_trust_politicians <- glm(spd_21 ~ trust_in_politicians + I(trust_in_politicians^2) + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(spd_trust_politicians, x = "trust_in_politicians",
xvals = seq(1, 11, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Vertrauen: Politiker:innen",
breaks = seq(1, 11, 1)) +
labs(y = "Predicted Probability of Voting SPD",
caption = "'1' indicates 'no trust', while 11 indicates 'full trust'.") +
ylim(c(0, 0.4)) +
theme_bw()
# immigrants bring crime is significant
spd_immig_crime <- glm(spd_21 ~ out_group_immig_crime + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(spd_immig_crime, x = "out_group_immig_crime",
xvals = seq(1, 5, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Immigration erhoeht Kriminalitaet in BRD",
breaks = seq(1, 5, 1),
labels = c("Stimme voll und ganz zu", "Stimme eher zu",
"Teils/Teils", "Lehne eher ab",
"Lehne voll und ganz ab")) +
labs(y = "Predicted Probability of Voting SPD") +
ylim(c(0.1, 0.4)) +
theme_bw()
# immigrants pose cultural threat is not significant at 5% level
# immigrants are good for economics is not significant at 5% level
# majority will is paramount is not significant
# outgroups should assimilate not significant
gruene_space <- glm(gruene_21 ~ distance_green + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
summary(gruene_space)
# placement of greens
gles_mod %>%
select(left_right_green_factor, left_right_self_factor) %>%
filter(!is.na(left_right_green_factor) & !is.na(left_right_self_factor)) %>%
pivot_longer(cols = everything(), names_to = "type", values_to = "value") %>%
count(type, value) %>%
group_by(type) %>%
mutate(share = 100*(n/sum(n))) %>%
ggplot(aes(x = value, y = share, fill = type)) +
geom_col(position = "dodge") +
geom_text(aes(label = round(share, 1)), vjust = -0.2, size = 2.7,
position = position_dodge(width = 0.8)) +
scale_y_continuous("Share of respondents", labels = scales::label_percent(scale = 1)) +
scale_fill_brewer("",
labels = c("left_right_green_factor" = "L-R placement of Greens",
"left_right_self_factor" = "Self L-R placement")) +
expand_limits(y = 30) +
labs(x = "") +
theme_bw() +
theme(legend.position = "bottom")
gruene_income <- glm(gruene_21 ~ household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_income, x = "household_income", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_line(aes(y = yvals)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
scale_x_continuous("Net Monthly Household Income",
breaks = seq(1, 13, 1),
labels = c("<500€", "[500-750€)",
"[750-1000€)", "[1000-1250€)",
"[1250-1500€)", "[1500-2000€)",
"[2000-2500€)", "[2500-3000€)",
"[3000-4000€)", "[4000-5000€)",
"[5000-7000€)", "[7000-10000€)",
">10000€")) +
labs(y = "Predicted Probability of Voting Green") +
ylim(c(0, 0.2)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 15, hjust = 1))
gruene_sclass <- glm(gruene_21 ~ subjective_class + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_sclass, x = "subjective_class",
xvals = seq(1, 6, 1),
draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Subjective Class",
breaks = seq(1, 6, 1),
labels = c("Unterschicht", "Arbeiterschicht",
"Untere Mittelschicht", "mittlere Mittelschicht", "obere Mittelschicht", "Oberschicht")) +
labs(y = "Predicted Probability of Voting Green") +
ylim(c(0, 0.25)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 15, hjust = 1))
cplot(gruene_income, x = "urban_rural_factor", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_discrete("Urban-Rural",
labels = c("Grossstadt", "Rand/Vorort grosser Stadt",
"Mittel-oder Kleinstadt", "laendliches Dorf",
"Einzelgehoeft")) +
labs(y = "Predicted Probability of Voting Green") +
ylim(c(0, 0.25)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 15, hjust = 1))
# plot
cplot(gruene_income,
x = "age", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_line(aes(y = yvals)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.2) +
scale_x_continuous("Age", breaks = seq(20, 90, 10)) +
ylim(c(0, 0.4)) +
theme_bw()
gruene_left_right_self <- glm(gruene_21 ~ left_right_self + I(left_right_self^2) + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_left_right_self, x = "left_right_self",
xvals = seq(1, 11, 1),
draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Left-Right Self-Placement",
breaks = seq(1, 11, 1)) +
labs(y = "Predicted Probability of Voting Green") +
theme_bw()
cplot(gruene_income, x = "abitur_factor", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_discrete("Education", labels = c("At Least Abitur",
"No Abitur")) +
labs(y = "Predicted Probability of Voting Green",
caption = "Covariates include: age, household income, sex, rurality of place of residence and an east-west dummy.") +
ylim(c(0.05, 0.3)) +
theme_bw()
cplot(gruene_income, x = "ostwest_factor", draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_discrete("Ost-West Dummy", labels = c("Ost", "West")) +
ylim(c(0, 0.2)) +
labs(y = "Predicted Probability of Voting Gruene") +
theme_bw()
gruene_cancel <- glm(gruene_21 ~ cancel_culture_subjektiv + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_cancel, x = "cancel_culture_subjektiv",
xvals = seq(1, 5, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Subjektiv: Keine freie Meinungsaeusserung moeglich",
breaks = seq(1, 5, 1),
labels = c("Stimme voll zu", "Stimme eher zu",
"Teils/Teils", "Stimme eher nicht zu",
"Stimme ueberhaupt nicht zu")) +
labs(y = "Predicted Probability of Voting Green") +
ylim(c(0, 0.3)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 15, hjust = 1))
gruene_trust_parliament <- glm(gruene_21 ~ trust_in_parliament + I(trust_in_parliament^2) + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_trust_parliament, x = "trust_in_parliament",
xvals = seq(1, 11, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Vertrauen: Bundestag",
breaks = seq(1, 11, 1)) +
labs(y = "Predicted Probability of Voting Green",
caption = "'1' indicates 'no trust', while 11 indicates 'full trust'.") +
ylim(c(0, 0.3)) +
theme_bw()
gruene_trust_parties <- glm(gruene_21 ~ trust_in_parties + I(trust_in_parties^2) + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_trust_parties, x = "trust_in_parties",
xvals = seq(1, 11, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Vertrauen: Parteien",
breaks = seq(1, 11, 1)) +
labs(y = "Predicted Probability of Voting Green",
caption = "'1' indicates 'no trust', while 11 indicates 'full trust'.") +
ylim(c(0, 0.3)) +
theme_bw()
gruene_trust_politicians <- glm(gruene_21 ~ trust_in_politicians + I(trust_in_politicians^2) + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_trust_politicians, x = "trust_in_politicians",
xvals = seq(1, 11, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Vertrauen: Politiker:innen",
breaks = seq(1, 11, 1)) +
labs(y = "Predicted Probability of Voting Green",
caption = "'1' indicates 'no trust', while 11 indicates 'full trust'.") +
ylim(c(0, 0.3)) +
theme_bw()
gruene_immig_culture_threat <- glm(gruene_21 ~ out_group_immig_culture_threat + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_immig_culture_threat, x = "out_group_immig_culture_threat",
xvals = seq(1, 5, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Deutsche Kultur durch Immigration bedroht",
breaks = seq(1, 5, 1),
labels = c("Stimme voll und ganz zu", "Stimme eher zu",
"Teils/Teils", "Lehne eher ab",
"Lehne voll und ganz ab")) +
labs(y = "Predicted Probability of Voting Green") +
theme_bw()
gruene_immig_crime <- glm(gruene_21 ~ out_group_immig_crime + I(out_group_immig_crime^2) + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_immig_crime, x = "out_group_immig_crime",
xvals = seq(1, 5, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Immigration erhoeht Kriminalitaet in BRD",
breaks = seq(1, 5, 1),
labels = c("Stimme voll und ganz zu", "Stimme eher zu",
"Teils/Teils", "Lehne eher ab",
"Lehne voll und ganz ab")) +
labs(y = "Predicted Probability of Voting Green") +
ylim(c(0, 0.4)) +
theme_bw()
gruene_majority <- glm(gruene_21 ~ out_group_majority_will + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor, family = binomial(link = "logit"), data = gles_mod)
# plot
cplot(gruene_majority, x = "out_group_majority_will",
xvals = seq(1, 5, 1), draw = F) %>%
as_tibble() %>%
ggplot(aes(x = xvals)) +
geom_point(aes(y = yvals)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.2) +
scale_x_continuous("Wille der Mehrheit hat Vorrang",
breaks = seq(1, 5, 1),
labels = c("Stimme voll und ganz zu", "Stimme eher zu",
"Teils/Teils", "Lehne eher ab",
"Lehne voll und ganz ab")) +
labs(y = "Predicted Probability of Voting Green") +
theme_bw()
ego_socio_model1 <- glm(union_21 ~ econ_current_personal*econ_current_eval_general*scale_pol_lasceht,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model2 <- glm(union_21 ~ econ_current_personal*econ_current_eval_general*scale_pol_lasceht + distance_cdu +  household_income + age,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model3 <- glm(union_21 ~ distance_cdu*econ_current_personal + econ_current_eval_general*scale_pol_lasceht +  household_income + age + abitur_factor + sex1,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model4 <- glm(union_21 ~ distance_cdu*econ_current_personal + econ_current_eval_general*scale_pol_lasceht +  household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model5 <- glm(union_21 ~ distance_cdu*econ_current_personal*scale_pol_lasceht + econ_current_eval_general*scale_pol_lasceht +  household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model6 <- glm(union_21 ~ distance_cdu + econ_current_eval_general*econ_current_personal*scale_pol_lasceht + household_income + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
# modelsummary
modelsummary(list(ego_socio_model1, ego_socio_model2, ego_socio_model3,
ego_socio_model4, ego_socio_model5),
estimate = "{estimate}{stars}")
ego_socio_model11 <- glm(union_21 ~ distance_cdu*scale_pol_lasceht + sex + household_income + urban_rural + ostwest_factor + age,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model12 <- glm(spd_21 ~ distance_spd*scale_pol_scholz + sex + household_income + urban_rural + ostwest_factor + age,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model13 <- glm(gruene_21 ~ distance_green*scale_pol_baerbock + sex + household_income + urban_rural + ostwest_factor + age,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model14 <- glm(afd_21 ~ distance_afd + sex + household_income + urban_rural + ostwest_factor + age,
family = binomial(link = "logit"),
data = gles_mod)
ego_socio_model15 <- glm(fdp_21 ~ econ_current_personal*econ_current_eval_general,
family = binomial(link = "logit"),
data = gles_mod)
# modelsummar<
modelsummary(list(ego_socio_model11, ego_socio_model12, ego_socio_model13, ego_socio_model14),
estimate = "{estimate}{stars}",
output = "kableExtra") %>%
kableExtra::kable_styling(latex_options = "scale_down")
afd_gender1 <- glm(afd_21 ~ gender_too_far_factor + age + abitur_factor + sex1 + urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
afd_gender2 <- glm(afd_21 ~ gender_too_far_factor*sex1 + age + abitur_factor +  urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
afd_gender3 <- glm(afd_21 ~ gender_too_far_factor*sex1 + age + abitur_factor +  urban_rural_factor + ostwest_factor + unemployed_dummy_factor,
family = binomial(link = "logit"),
data = gles_mod)
afd_gender4 <- glm(afd_21 ~ gender_too_far_factor*sex1*unemployed_dummy + age + abitur_factor +  urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
afd_gender5 <- glm(afd_21 ~ gender_too_far_factor*sex1*econ_current_personal + age + abitur_factor +  urban_rural_factor + ostwest_factor,
family = binomial(link = "logit"),
data = gles_mod)
# modelsummary
modelsummary(list(afd_gender1, afd_gender2, afd_gender3, afd_gender5),
estimate = "{estimate}{stars}",
output = "kableExtra") %>%
kableExtra::kable_styling(latex_options = "scale_down")
library(democracyData)
democracyData::gwf_all_extended %>% view()
library(tidyverse)
democracyData::gwf_all_extended %>% view()
democracyData::gwf_all_extended %>% filter(gwf_country == "South Africa") %>% view()
levels(factor(democracyData::gwf_all_extended$gwf_regimetype))
